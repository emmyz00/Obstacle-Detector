`timescale 1ns / 1ps

module ObstacleDetection(
  input wire reset,
  input wire [15:0] sensor_left, // 16-bit input from left sensor (in millimeters)
  input wire [15:0] sensor_right, // 16-bit input from right sensor (in millimeters)
  output reg [1:0] left_buzz, // 2-bit output for left buzz (00: off, 01: close, 10: further)
  output reg [1:0] right_buzz // 2-bit output for right buzz (00: off, 01: close, 10: further)
);
  
  // Defines the distance threshold in millimeters
  parameter THRESHOLD = 16'd1000; // 1000 millimeters
  
  always @(*) begin
    if (reset) begin
      // When reset is active, turn off both buzzers
      left_buzz = 0;
      right_buzz = 0;
    end else begin
      // Default state: both buzzers off
      left_buzz = 0;
      right_buzz = 0;
      
      // Check left sensor close and right sensor close, activates opposite buzzer to closest
      if (sensor_left <= THRESHOLD && sensor_right <= THRESHOLD) begin
        if (sensor_left <= sensor_right) begin
          right_buzz = 2'b10;
          left_buzz = 2'b01;
        end
        if (sensor_left > sensor_right) begin
          left_buzz = 2'b10;
          right_buzz = 2'b01;
        end
      end
      
      // Check left sensor close and right sensor far, activates right buzzer
      if (sensor_left <= THRESHOLD && sensor_right > THRESHOLD) begin
        right_buzz = 2'b10;
      end
      
      // Check right sensor close and left sensor far, activates left buzzer
      if (sensor_right <= THRESHOLD && sensor_left > THRESHOLD) begin
        left_buzz = 2'b10;
      end
    end
  end

endmodule
